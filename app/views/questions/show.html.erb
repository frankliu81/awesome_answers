<h1><%= @question.title %></h1>
<p><%= @question.body %> </p>
<p>View Count: <%=  @question.view_count %> </p>
<p>Created By: <%= @question.user_full_name.titleize %></p>
<p>Tags: <%= @question.tags.map(&:name).join(", ") %></p>
<!-- <p>Tags: <%#= @question.tags.map(|t| t.name).join(", ") %></p> -->

<%# if @question.user == current_user %>
<%# can? is a helper method that came from the CanCanCan gem to help us
enforce authorization rules in the views and controllers %>
<%# crud will include both :edit and destroy %>
<%# if can? :crud, @question %>
<% if can? :crud, @question %>
  <%= link_to "Edit", edit_question_path(@question) %>
  <%= link_to "Delete", question_path(@question), method: :delete,
                                                data: {confirm: "Are you sure?"}%>
<% end %>

<div id="question-like">
  <%= render "/likes/like" %>
</div>
 
 |
 <% user_vote = @question.vote_for(current_user) %>
 <% if user_vote && user_vote.is_up?  %>
  <%= link_to "Un-do Vote Up", question_vote_path(@question, user_vote), method: :delete %>
  |
  <%#  patch and delete have the same url %>
  <%= link_to "Vote Down", question_vote_path(@question, user_vote, {vote: {is_up: false}}), method: :patch%>
 <% elsif user_vote %> <%# vote is down %>
  <%= link_to "Vote Up", question_vote_path(@question, user_vote, {vote: {is_up: true}}), method: :patch %>
  |
  <%= link_to "Un-do Vote Down", question_vote_path(@question, user_vote), method: :delete%>
 <% else %>
   <%= link_to "Vote Up", question_votes_path(@question, {vote: {is_up: true}}), method: :post %>
   |
   <%= link_to "Vote Down", question_votes_path(@question, {vote: {is_up: false}}), method: :post%>
  <% end %>
  (<%= @question.vote_value %>)

<hr>

<div id="answer-form">
  <%= render "/answers/form", answer: @answer  %>
</div>

<h2>Answers</h2>
<div id="answers">
  <% @question.answers.each do |ans| %>
    <%= render "/answers/answer", answer: ans %>
  <% end %>
</div>
